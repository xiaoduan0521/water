<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xd.mapper.SyDeptMapper" >
  <resultMap id="BaseResultMap" type="com.xd.entity.SyDept" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="DeptName" property="deptname" jdbcType="VARCHAR" />
    <result column="Remark" property="remark" jdbcType="VARCHAR" />
    <result column="Disabled" property="disabled" jdbcType="BIT" />
  </resultMap>

  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, DeptName, Remark, Disabled
  </sql>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sy_dept
    where Disabled = 0
    order by id
  </select>

  <select id="selectByDisabledToSelect" resultMap="BaseResultMap" >
    select
    ID, DeptName
    from sy_dept
    WHERE disabled = 0
    order by id
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from sy_dept
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sy_dept
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xd.entity.SyDept" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sy_dept (ID, DeptName, Remark, 
      Disabled)
    values (#{id,jdbcType=INTEGER}, #{deptname,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{disabled,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.xd.entity.SyDept" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sy_dept
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="deptname != null" >
        DeptName,
      </if>
      <if test="remark != null" >
        Remark,
      </if>
      <if test="disabled != null" >
        Disabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deptname != null" >
        #{deptname,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null" >
        #{disabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xd.entity.SyDept" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sy_dept
    <set >
      <if test="deptname != null" >
        DeptName = #{deptname,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        Remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null" >
        Disabled = #{disabled,jdbcType=BIT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xd.entity.SyDept" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sy_dept
    set DeptName = #{deptname,jdbcType=VARCHAR},
      Remark = #{remark,jdbcType=VARCHAR},
      Disabled = #{disabled,jdbcType=BIT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>